name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
        
    - name: Add production server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to production server
      run: |
        ssh ${{ secrets.PRODUCTION_SERVER_USER }}@${{ secrets.PRODUCTION_SERVER_HOST }} << 'EOF'
          cd ${{ secrets.PRODUCTION_DEPLOY_PATH }}
          
          # Pull latest changes
          git fetch origin
          git checkout ${{ github.ref_name }}
          git pull origin ${{ github.ref_name }}
          
          # Create environment file
          cat > .env.production << EOL
          PROD_DB_CONNECTION="${{ secrets.PROD_DB_CONNECTION }}"
          PROD_DISCOVERY_URL="${{ secrets.PROD_DISCOVERY_URL }}"
          EMAIL_USERNAME="${{ secrets.EMAIL_USERNAME }}"
          EMAIL_PASSWORD="${{ secrets.EMAIL_PASSWORD }}"
          EMAIL_FROM="${{ secrets.EMAIL_FROM }}"
          EMAIL_SMTP_SERVER="${{ secrets.EMAIL_SMTP_SERVER }}"
          EMAIL_SMTP_PORT="${{ secrets.EMAIL_SMTP_PORT }}"
          EMAIL_USE_SSL="${{ secrets.EMAIL_USE_SSL }}"
          CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}"
          CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}"
          CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}"
          EOL
          
          # Make deploy script executable and run it
          chmod +x deploy-production.sh
          ./deploy-production.sh
        EOF
        
    - name: Verify deployment
      run: |
        sleep 30
        curl -f ${{ secrets.PROD_DISCOVERY_URL }}/health || exit 1
        echo "âœ… Production deployment verified successfully!"
        
    - name: Notify team
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: |
          ðŸš€ Production Deployment ${{ job.status }}!
          Branch: ${{ github.ref_name }}
          Commit: ${{ github.sha }}
          URL: ${{ secrets.PROD_DISCOVERY_URL }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}